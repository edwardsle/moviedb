{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\moviedb\\\\moviedb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edward\\\\Documents\\\\GitHub\\\\moviedb\\\\moviedb\\\\src\\\\components\\\\search\\\\layout\\\\Result.js\";\nimport React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBView, MDBCardBody, MDBDataTableV5 } from 'mdbreact';\nimport Movie from './Movie';\nexport default function Result(props) {\n  console.log(props);\n  state = {\n    movie_list: []\n  };\n\n  if (props) {\n    var _movie_list = props;\n    this.setState({\n      movie_list: _movie_list\n    });\n  }\n\n  var _React$useState = React.useState({\n    columns: [{\n      label: 'Title',\n      field: 'Title',\n      width: 150,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'Name'\n      }\n    }, {\n      label: 'ID',\n      field: 'imdbID',\n      width: 100\n    }, {\n      label: 'Year',\n      field: 'Year',\n      sort: 'asc',\n      width: 200\n    }],\n    rows: [{\n      movie_list\n    }]\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      datatable = _React$useState2[0],\n      setDatatable = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checkbox1 = _React$useState4[0],\n      setCheckbox1 = _React$useState4[1];\n\n  var showLogs2 = function showLogs2(e) {\n    setCheckbox1(e);\n  };\n\n  return /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBCard, {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MDBView, {\n    className: \"gradient-card-header elegant-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4-responsive text-white text-center py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Your Search\")), /*#__PURE__*/React.createElement(MDBCardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MDBDataTableV5, {\n    hover: true,\n    entriesOptions: [5, 20, 25],\n    entries: 5,\n    pagesAmount: 4,\n    data: datatable,\n    checkbox: true,\n    headCheckboxID: \"uniq1\",\n    bodyCheckboxID: \"uniq12\",\n    getValueCheckBox: function getValueCheckBox(e) {\n      showLogs2(e);\n    },\n    proCheckboxes: true,\n    filledCheckboxes: true,\n    proSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Movie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \" \", checkbox1 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 47\n    }\n  }, JSON.stringify(delete checkbox1.checkbox && checkbox1))))))));\n}","map":{"version":3,"sources":["C:/Users/Edward/Documents/GitHub/moviedb/moviedb/src/components/search/layout/Result.js"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBCard","MDBView","MDBCardBody","MDBDataTableV5","Movie","Result","props","console","log","state","movie_list","setState","useState","columns","label","field","width","attributes","sort","rows","datatable","setDatatable","checkbox1","setCheckbox1","showLogs2","e","JSON","stringify","checkbox"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBView, MDBCardBody, MDBDataTableV5 } from 'mdbreact';\r\nimport Movie from './Movie'\r\nexport default function Result(props) {\r\n  console.log(props);\r\n  state ={\r\n    movie_list: []\r\n  }\r\n\r\n  if (props){\r\n    const movie_list = props;\r\n    this.setState({ movie_list });\r\n  }\r\n\r\n  const [datatable, setDatatable] = React.useState({\r\n    columns: [\r\n      {\r\n        label: 'Title',\r\n        field: 'Title',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'ID',\r\n        field: 'imdbID',        \r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'Year',\r\n        field: 'Year',\r\n        sort: 'asc',\r\n        width: 200,\r\n      }\r\n    ],\r\n    rows: [\r\n      {movie_list},      \r\n    ],\r\n  });\r\n  const [checkbox1, setCheckbox1] = React.useState('');\r\n\r\n  const showLogs2 = (e) => {\r\n    setCheckbox1(e);\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n        <MDBRow>\r\n            <MDBCol md=\"12\">\r\n                <MDBCard className=\"my-5\">\r\n                    <MDBView className=\"gradient-card-header elegant-color\">\r\n                        <h4 className=\"h4-responsive text-white text-center py-3\">Your Search</h4>\r\n                    </MDBView>\r\n                    <MDBCardBody>\r\n                        <MDBDataTableV5\r\n                            hover\r\n                            entriesOptions={[5, 20, 25]}\r\n                            entries={5}\r\n                            pagesAmount={4}\r\n                            data={datatable}\r\n                            checkbox\r\n                            headCheckboxID='uniq1'\r\n                            bodyCheckboxID='uniq12'\r\n                            getValueCheckBox={(e) => {\r\n                            showLogs2(e);\r\n                            }}\r\n                            proCheckboxes\r\n                            filledCheckboxes\r\n                            proSelect\r\n                        />\r\n\r\n                        <Movie> {checkbox1 && <p>{JSON.stringify(delete checkbox1.checkbox && checkbox1)}</p>}</Movie>\r\n                        </MDBCardBody>\r\n                </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>         \r\n    </MDBContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}